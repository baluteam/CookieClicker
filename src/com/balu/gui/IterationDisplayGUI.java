/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.balu.gui;

/**
 *
 * @author Balu_ADMIN
 */
public class IterationDisplayGUI extends javax.swing.JFrame {
    /**
     * Title of the loading indicator window
     */
    private static final String LOADING_INDICATOR_TITLE = "Calcualtion in progress...";
    /**
     * The label in the loading indicator window
     */
    private static final String LOADING_TEXT = "Loading...";
    /**
     * This is the loading gif animation file in the resources folder.
     */
    private static final String LOADING_GIF_ANIMATION_FILENAME = "resources/ajax-loader.gif";
    /**
     * We store the loading indicator window in this field when we display it, so that we can dispose it when it is not needed any longer
     */
    private static javax.swing.JFrame loadingIndicatorWindow;
    /**
     * Creates if needed and displays the loading indicator window
     */
    public static void displayLoadingIndicator() {
        if(loadingIndicatorWindow != null) {
            loadingIndicatorWindow.setVisible(true);
            return;
        }
        loadingIndicatorWindow = new javax.swing.JFrame(LOADING_INDICATOR_TITLE);
        javax.swing.ImageIcon loading = new javax.swing.ImageIcon(LOADING_GIF_ANIMATION_FILENAME);
        loadingIndicatorWindow.add(new javax.swing.JLabel(LOADING_TEXT, loading, javax.swing.JLabel.CENTER));
        loadingIndicatorWindow.setDefaultCloseOperation(javax.swing.JFrame.DO_NOTHING_ON_CLOSE);
        loadingIndicatorWindow.setSize(400, 300);
        loadingIndicatorWindow.setLocationRelativeTo(null); //position should be in the center
        loadingIndicatorWindow.setVisible(true);
    }
    /**
     * Hides and disposes te loading indicator window.
     */
    public static void hideLoadingIndicator() {
        if(loadingIndicatorWindow != null) {
            loadingIndicatorWindow.setVisible(false);
            loadingIndicatorWindow.dispose();
            loadingIndicatorWindow = null;
        }
    }

    /**
     * Creates new form IterationDisplayGUI
     */
    public IterationDisplayGUI() {
        initComponents();
        setVisible(true);
    }
    
    public void setText(String text) {
        iterationDisplayTextArea.setText(text);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        iterationDisplayTextArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Iteration steps");
        setMaximumSize(new java.awt.Dimension(1000, 1000));
        setMinimumSize(new java.awt.Dimension(800, 400));
        setPreferredSize(new java.awt.Dimension(800, 400));
        setSize(new java.awt.Dimension(800, 400));

        iterationDisplayTextArea.setEditable(false);
        iterationDisplayTextArea.setColumns(20);
        iterationDisplayTextArea.setRows(5);
        jScrollPane1.setViewportView(iterationDisplayTextArea);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IterationDisplayGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IterationDisplayGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IterationDisplayGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IterationDisplayGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IterationDisplayGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea iterationDisplayTextArea;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
